

/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    kuraraysaijo.view.documentroot
 *  Class:      AlertScreen
 *  Source:     F:\git\KuraraySaijo\src\kuraraysaijo\view\documentroot\AlertScreen.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2023.02.23 11:36:05 JST
 */

package kuraraysaijo.view.documentroot
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import kuraraysaijo.controller.documentroot.AlertScreen;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.filters.*;
import mx.graphics.SolidColor;
import mx.graphics.SolidColorStroke;
import mx.styles.*;
import spark.components.Group;
import spark.components.Label;
import spark.components.TextArea;
import spark.core.SpriteVisualElement;
import spark.primitives.Rect;



//  begin class def
public class AlertScreen
    extends spark.components.Group
    implements mx.binding.IBindingClient
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var body : spark.core.SpriteVisualElement;

    [Bindable]
	/**
 * @private
 **/
    public var ctrlr : kuraraysaijo.controller.documentroot.AlertScreen;

    [Bindable]
	/**
 * @private
 **/
    public var headLabel : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var textarea : spark.components.TextArea;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function AlertScreen()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _AlertScreen_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_kuraraysaijo_view_documentroot_AlertScreenWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return AlertScreen[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.percentWidth = 100.0;
        this.percentHeight = 100.0;
        this.mxmlContent = [_AlertScreen_SpriteVisualElement1_i(), _AlertScreen_Rect1_c(), _AlertScreen_Group2_c()];
        _AlertScreen_AlertScreen1_i();


        // events










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _AlertScreen_AlertScreen1_i() : kuraraysaijo.controller.documentroot.AlertScreen
{
	var temp : kuraraysaijo.controller.documentroot.AlertScreen = new kuraraysaijo.controller.documentroot.AlertScreen();
	temp.initialized(this, "ctrlr")
	ctrlr = temp;
	mx.binding.BindingManager.executeBindings(this, "ctrlr", ctrlr);
	return temp;
}

private function _AlertScreen_SpriteVisualElement1_i() : spark.core.SpriteVisualElement
{
	var temp : spark.core.SpriteVisualElement = new spark.core.SpriteVisualElement();
	temp.initialized(this, "body")
	body = temp;
	mx.binding.BindingManager.executeBindings(this, "body", body);
	return temp;
}

private function _AlertScreen_Rect1_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.alpha = 0.5;
	temp.fill = _AlertScreen_SolidColor1_c();
	temp.initialized(this, null)
	return temp;
}

private function _AlertScreen_SolidColor1_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 0;
	return temp;
}

private function _AlertScreen_Group2_c() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.width = 600;
	temp.height = 600;
	temp.horizontalCenter = 0;
	temp.verticalCenter = 0;
	temp.mxmlContent = [_AlertScreen_Rect2_c(), _AlertScreen_Label1_i(), _AlertScreen_TextArea1_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _AlertScreen_Rect2_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.fill = _AlertScreen_SolidColor2_c();
	temp.stroke = _AlertScreen_SolidColorStroke1_c();
	temp.initialized(this, null)
	return temp;
}

private function _AlertScreen_SolidColor2_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 2236962;
	return temp;
}

private function _AlertScreen_SolidColorStroke1_c() : mx.graphics.SolidColorStroke
{
	var temp : mx.graphics.SolidColorStroke = new mx.graphics.SolidColorStroke();
	temp.color = 1118481;
	temp.weight = 1;
	return temp;
}

private function _AlertScreen_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.top = 100;
	temp.percentWidth = 100.0;
	temp.styleName = "textLarge";
	temp.setStyle("textAlign", "center");
	temp.setStyle("verticalAlign", "middle");
	temp.id = "headLabel";
	if (!temp.document) temp.document = this;
	headLabel = temp;
	mx.binding.BindingManager.executeBindings(this, "headLabel", headLabel);
	return temp;
}

private function _AlertScreen_TextArea1_i() : spark.components.TextArea
{
	var temp : spark.components.TextArea = new spark.components.TextArea();
	temp.top = 180;
	temp.percentWidth = 100.0;
	temp.styleName = "textSmall";
	temp.enabled = false;
	temp.focusEnabled = false;
	temp.mouseFocusEnabled = false;
	temp.setStyle("paddingLeft", 20);
	temp.setStyle("paddingRight", 20);
	temp.setStyle("contentBackgroundColor", 2236962);
	temp.setStyle("borderVisible", false);
	temp.id = "textarea";
	if (!temp.document) temp.document = this;
	textarea = temp;
	mx.binding.BindingManager.executeBindings(this, "textarea", textarea);
	return temp;
}


    //  binding mgmt
    private function _AlertScreen_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (ctrlr.headText);
                return (result == undefined ? null : String(result));
            },
            null,
            "headLabel.text"
            );

        result[1] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (ctrlr.contentText);
                return (result == undefined ? null : String(result));
            },
            null,
            "textarea.text"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (AlertScreen)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
