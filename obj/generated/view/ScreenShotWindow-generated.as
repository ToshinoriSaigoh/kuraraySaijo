

/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    view
 *  Class:      ScreenShotWindow
 *  Source:     F:\git\KuraraySaijo\src\view\ScreenShotWindow.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2023.02.23 11:36:05 JST
 */

package view
{

import controller.ScreenShotWindow;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.filters.*;
import mx.styles.*;
import spark.components.Button;
import spark.components.HGroup;
import spark.components.Window;
import spark.layouts.BasicLayout;
import view.screenshotwindow.Skin_CloseBtn;
import view.screenshotwindow.Skin_ShotBtn;



//  begin class def
public class ScreenShotWindow
    extends spark.components.Window
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var closeBtn : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var ctrlr : controller.ScreenShotWindow;

    [Bindable]
	/**
 * @private
 **/
    public var shotBtn : spark.components.Button;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function ScreenShotWindow()
    {
        super();

        mx_internal::_document = this;




        // layer initializers

       
        // properties
        this.width = 192;
        this.height = 96;
        this.showStatusBar = false;
        this.alwaysInFront = true;
        this.maximizable = false;
        this.layout = _ScreenShotWindow_BasicLayout1_c();
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_ScreenShotWindow_Array1_c);
        _ScreenShotWindow_ScreenShotWindow1_i();


        // events












    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _ScreenShotWindow_ScreenShotWindow1_i() : controller.ScreenShotWindow
{
	var temp : controller.ScreenShotWindow = new controller.ScreenShotWindow();
	temp.initialized(this, "ctrlr")
	ctrlr = temp;
	mx.binding.BindingManager.executeBindings(this, "ctrlr", ctrlr);
	return temp;
}

private function _ScreenShotWindow_BasicLayout1_c() : spark.layouts.BasicLayout
{
	var temp : spark.layouts.BasicLayout = new spark.layouts.BasicLayout();
	return temp;
}

private function _ScreenShotWindow_Array1_c() : Array
{
	var temp : Array = [_ScreenShotWindow_HGroup1_c()];
	return temp;
}

private function _ScreenShotWindow_HGroup1_c() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.gap = 0;
	temp.mxmlContent = [_ScreenShotWindow_Button1_i(), _ScreenShotWindow_Button2_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _ScreenShotWindow_Button1_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.label = "";
	temp.percentWidth = 50.0;
	temp.percentHeight = 100.0;
	temp.setStyle("skinClass", view.screenshotwindow.Skin_ShotBtn);
	temp.id = "shotBtn";
	if (!temp.document) temp.document = this;
	shotBtn = temp;
	mx.binding.BindingManager.executeBindings(this, "shotBtn", shotBtn);
	return temp;
}

private function _ScreenShotWindow_Button2_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.label = "";
	temp.percentWidth = 50.0;
	temp.percentHeight = 100.0;
	temp.setStyle("skinClass", view.screenshotwindow.Skin_CloseBtn);
	temp.id = "closeBtn";
	if (!temp.document) temp.document = this;
	closeBtn = temp;
	mx.binding.BindingManager.executeBindings(this, "closeBtn", closeBtn);
	return temp;
}





    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
