

/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    view.documentroot.reportscreen.sidebar.filelistbox
 *  Class:      OpenFileItem
 *  Source:     F:\git\KuraraySaijo\src\view\documentroot\reportscreen\sidebar\filelistbox\OpenFileItem.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2023.02.23 11:36:04 JST
 */

package view.documentroot.reportscreen.sidebar.filelistbox
{

import controller.documentroot.reportscreen.sidebar.filelistbox.OpenFileItem;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.states.SetProperty;
import mx.states.SetStyle;
import mx.states.State;
import mx.styles.*;
import spark.components.Button;
import spark.components.Group;
import spark.components.HGroup;
import spark.components.Label;
import spark.components.ToggleButton;
import spark.components.VGroup;
import spark.components.supportClasses.ItemRenderer;
import spark.core.SpriteVisualElement;
import view.documentroot.reportscreen.sidebar.filelistbox.Skin_ShareReportBtn;
import view.documentroot.reportscreen.sidebar.filelistbox.Skin_ToggleBtnRect;
import view.utils.DataTypeMark;
import view.utils.button.Skin_CloseBtn;
import view.utils.button.Skin_SaveReportBtn;


[States("default", "selected")]

//  begin class def
public class OpenFileItem
    extends spark.components.supportClasses.ItemRenderer
    implements mx.binding.IBindingClient, mx.core.IStateClient2
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var body : spark.core.SpriteVisualElement;

    [Bindable]
	/**
 * @private
 **/
    public var closeReportBtn : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var ctrlr : controller.documentroot.reportscreen.sidebar.filelistbox.OpenFileItem;

    [Bindable]
	/**
 * @private
 **/
    public var dataTypeMark : view.utils.DataTypeMark;

    [Bindable]
	/**
 * @private
 **/
    public var date : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var fileName : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var openFileItem : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var saveReportBtn : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var shareReportBtn : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var toggleBtn : spark.components.ToggleButton;

    [Bindable]
	/**
 * @private
 **/
    public var type : spark.components.Label;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function OpenFileItem()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _OpenFileItem_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_view_documentroot_reportscreen_sidebar_filelistbox_OpenFileItemWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return OpenFileItem[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.autoDrawBackground = false;
        this.mouseEnabled = false;
        this.mxmlContent = [_OpenFileItem_SpriteVisualElement1_i(), _OpenFileItem_Group1_i()];
        this.currentState = "default";
        _OpenFileItem_OpenFileItem1_i();


        // events



		states = [
		  new State ({
		    name: "default",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "selected",
		    overrides: [
		      new mx.states.SetStyle().initializeFromObject({
		        target: "type",
		        name: "color",
		        value: 2236962
		      })
		      ,
		      new mx.states.SetStyle().initializeFromObject({
		        target: "fileName",
		        name: "color",
		        value: 2236962
		      })
		      ,
		      new mx.states.SetStyle().initializeFromObject({
		        target: "date",
		        name: "color",
		        value: 2236962
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "shareReportBtn",
		        name: "visible",
		        value: true
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "saveReportBtn",
		        name: "visible",
		        value: true
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "closeReportBtn",
		        name: "visible",
		        value: true
		      })
		    ]
		  })
		];







        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _OpenFileItem_OpenFileItem1_i() : controller.documentroot.reportscreen.sidebar.filelistbox.OpenFileItem
{
	var temp : controller.documentroot.reportscreen.sidebar.filelistbox.OpenFileItem = new controller.documentroot.reportscreen.sidebar.filelistbox.OpenFileItem();
	temp.initialized(this, "ctrlr")
	ctrlr = temp;
	mx.binding.BindingManager.executeBindings(this, "ctrlr", ctrlr);
	return temp;
}

private function _OpenFileItem_SpriteVisualElement1_i() : spark.core.SpriteVisualElement
{
	var temp : spark.core.SpriteVisualElement = new spark.core.SpriteVisualElement();
	temp.initialized(this, "body")
	body = temp;
	mx.binding.BindingManager.executeBindings(this, "body", body);
	return temp;
}

private function _OpenFileItem_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.name = "openFileItem";
	temp.width = 352;
	temp.right = 2;
	temp.height = 88;
	temp.mxmlContent = [_OpenFileItem_ToggleButton1_i(), _OpenFileItem_HGroup1_c(), _OpenFileItem_DataTypeMark1_i(), _OpenFileItem_HGroup2_c()];
	temp.id = "openFileItem";
	if (!temp.document) temp.document = this;
	openFileItem = temp;
	mx.binding.BindingManager.executeBindings(this, "openFileItem", openFileItem);
	return temp;
}

private function _OpenFileItem_ToggleButton1_i() : spark.components.ToggleButton
{
	var temp : spark.components.ToggleButton = new spark.components.ToggleButton();
	temp.name = "openFileItem";
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.setStyle("skinClass", view.documentroot.reportscreen.sidebar.filelistbox.Skin_ToggleBtnRect);
	temp.id = "toggleBtn";
	if (!temp.document) temp.document = this;
	toggleBtn = temp;
	mx.binding.BindingManager.executeBindings(this, "toggleBtn", toggleBtn);
	return temp;
}

private function _OpenFileItem_HGroup1_c() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.percentWidth = 100.0;
	temp.height = 44;
	temp.top = 4;
	temp.left = 20;
	temp.mouseEnabled = false;
	temp.gap = 0;
	temp.mxmlContent = [_OpenFileItem_VGroup1_c()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _OpenFileItem_VGroup1_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.percentWidth = 100.0;
	temp.height = 44;
	temp.right = 4;
	temp.mouseEnabled = false;
	temp.mxmlContent = [_OpenFileItem_Label1_i(), _OpenFileItem_Label2_i(), _OpenFileItem_Label3_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _OpenFileItem_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentWidth = 100.0;
	temp.left = 0;
	temp.height = 24;
	temp.mouseEnabled = false;
	temp.mouseChildren = false;
	temp.setStyle("textAlign", "left");
	temp.id = "type";
	if (!temp.document) temp.document = this;
	type = temp;
	mx.binding.BindingManager.executeBindings(this, "type", type);
	return temp;
}

private function _OpenFileItem_Label2_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentWidth = 100.0;
	temp.left = 0;
	temp.height = 24;
	temp.mouseEnabled = false;
	temp.mouseChildren = false;
	temp.setStyle("textAlign", "left");
	temp.id = "fileName";
	if (!temp.document) temp.document = this;
	fileName = temp;
	mx.binding.BindingManager.executeBindings(this, "fileName", fileName);
	return temp;
}

private function _OpenFileItem_Label3_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentWidth = 100.0;
	temp.left = 0;
	temp.height = 24;
	temp.mouseEnabled = false;
	temp.mouseChildren = false;
	temp.setStyle("textAlign", "right");
	temp.id = "date";
	if (!temp.document) temp.document = this;
	date = temp;
	mx.binding.BindingManager.executeBindings(this, "date", date);
	return temp;
}

private function _OpenFileItem_DataTypeMark1_i() : view.utils.DataTypeMark
{
	var temp : view.utils.DataTypeMark = new view.utils.DataTypeMark();
	temp.width = 12;
	temp.percentHeight = 100.0;
	temp.left = 0;
	temp.id = "dataTypeMark";
	if (!temp.document) temp.document = this;
	dataTypeMark = temp;
	mx.binding.BindingManager.executeBindings(this, "dataTypeMark", dataTypeMark);
	return temp;
}

private function _OpenFileItem_HGroup2_c() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.gap = 4;
	temp.top = 4;
	temp.right = 4;
	temp.mxmlContent = [_OpenFileItem_Button1_i(), _OpenFileItem_Button2_i(), _OpenFileItem_Button3_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _OpenFileItem_Button1_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.name = "shareReportBtn";
	temp.width = 44;
	temp.height = 44;
	temp.visible = false;
	temp.mouseEnabled = true;
	temp.setStyle("skinClass", view.documentroot.reportscreen.sidebar.filelistbox.Skin_ShareReportBtn);
	temp.id = "shareReportBtn";
	if (!temp.document) temp.document = this;
	shareReportBtn = temp;
	mx.binding.BindingManager.executeBindings(this, "shareReportBtn", shareReportBtn);
	return temp;
}

private function _OpenFileItem_Button2_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.name = "saveReportBtn";
	temp.width = 44;
	temp.height = 44;
	temp.visible = false;
	temp.mouseEnabled = true;
	temp.setStyle("skinClass", view.utils.button.Skin_SaveReportBtn);
	temp.id = "saveReportBtn";
	if (!temp.document) temp.document = this;
	saveReportBtn = temp;
	mx.binding.BindingManager.executeBindings(this, "saveReportBtn", saveReportBtn);
	return temp;
}

private function _OpenFileItem_Button3_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.name = "closeReportBtn";
	temp.width = 44;
	temp.height = 44;
	temp.visible = false;
	temp.mouseEnabled = true;
	temp.setStyle("skinClass", view.utils.button.Skin_CloseBtn);
	temp.id = "closeReportBtn";
	if (!temp.document) temp.document = this;
	closeReportBtn = temp;
	mx.binding.BindingManager.executeBindings(this, "closeReportBtn", closeReportBtn);
	return temp;
}


    //  binding mgmt
    private function _OpenFileItem_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (data.id);
                return (result == undefined ? null : String(result));
            },
            null,
            "fileName.text"
            );

        result[1] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (data.saveDate);
                return (result == undefined ? null : String(result));
            },
            null,
            "date.text"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (OpenFileItem)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
